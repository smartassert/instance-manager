name: service.configure

on:
  repository_dispatch:
    types: [service-configure]
  workflow_dispatch:
    inputs:
      service_id:
        description: The service for which the configuration is being stored
        required: true
      state_url:
        description: URL from which to get instance state
        required: false
      health_check_url:
        description: URL from which to check that an instance is healthy
        required: false

jobs:
  store-service-configuration:
    name: Store ${{ github.event.inputs.service_id }}
    runs-on: ubuntu-latest

    steps:
      - name: Output repository_dispatch inputs
        if: ${{ github.event_name == 'repository_dispatch' }}
        env:
          INPUTS: ${{ toJson(github.event.client_payload) }}
        run: echo "$INPUTS"

      - name: Output workflow_dispatch inputs
        env:
          INPUTS: ${{ toJson(github.event.inputs) }}
        run: echo "$INPUTS"

      - name: Set service_id
        id: service_id
        env:
          REPOSITORY_DISPATCH_VALUE: ${{ github.event.client_payload.service_id }}
          WORKFLOW_DISPATCH_VALUE: ${{ github.event.inputs.service_id }}
        run: |
          VALUE="${REPOSITORY_DISPATCH_VALUE:-$WORKFLOW_DISPATCH_VALUE}"
          if [ "" = "$VALUE" ]; then
            echo "service_id not set"
            exit 1
          fi

          echo "::set-output name=value::$VALUE"

      - name: Set state_url
        id: state_url
        env:
          REPOSITORY_DISPATCH_VALUE: ${{ github.event.client_payload.state_url }}
          WORKFLOW_DISPATCH_VALUE: ${{ github.event.inputs.state_url }}
        run: echo "::set-output name=value::${REPOSITORY_DISPATCH_VALUE:-$WORKFLOW_DISPATCH_VALUE}"

      - name: Set health_check_url
        id: health_check_url
        env:
          REPOSITORY_DISPATCH_VALUE: ${{ github.event.client_payload.health_check_url }}
          WORKFLOW_DISPATCH_VALUE: ${{ github.event.inputs.health_check_url }}
        run: echo "::set-output name=value::${REPOSITORY_DISPATCH_VALUE:-$WORKFLOW_DISPATCH_VALUE}"

      - name: Output setup
        run: |
          echo "service_id: ${{ steps.service_id.outputs.value }}"
          echo "state_url: ${{ steps.state_url.outputs.value }}"
          echo "health_check_url: ${{ steps.health_check_url.outputs.value }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Store
        env:
          CONFIGURATION_PATH: ./services/${{ steps.service_id.outputs.value }}/configuration.json
          STATE_URL: ${{ steps.state_url.outputs.value }}
          HEALTH_CHECK_URL: ${{ steps.health_check_url.outputs.value }}
        run: |
          JSON="{
            \"state_url\":\"$STATE_URL\",
            \"health_check_url\":\"$HEALTH_CHECK_URL\"
          }"

          mkdir -p "$(dirname "$CONFIGURATION_PATH")"
          jq "." <<< "$JSON" > "$CONFIGURATION_PATH"

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic configuration update for ${{ steps.service_id.outputs.value }}"
