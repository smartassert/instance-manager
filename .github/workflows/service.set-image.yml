name: service.set-image

on:
  repository_dispatch:
    types: [service-set-image]
  workflow_dispatch:
    inputs:
      service_id:
        description: The service for which the configuration is being stored
        required: true
      image_id:
        description: ID of the snapshot to store
        required: true

jobs:
  store-service-configuration:
    name: Store ${{ github.event.inputs.service_id }}
    runs-on: ubuntu-latest

    steps:
      - name: Output repository_dispatch inputs
        if: ${{ github.event_name == 'repository_dispatch' }}
        env:
          INPUTS: ${{ toJson(github.event.client_payload) }}
        run: echo "$INPUTS"

      - name: Output workflow_dispatch inputs
        env:
          INPUTS: ${{ toJson(github.event.inputs) }}
        run: echo "$INPUTS"

      - name: Set service_id
        env:
          REPOSITORY_DISPATCH_VALUE: ${{ github.event.client_payload.service_id }}
          WORKFLOW_DISPATCH_VALUE: ${{ github.event.inputs.service_id }}
        run: |
          VALUE="${REPOSITORY_DISPATCH_VALUE:-$WORKFLOW_DISPATCH_VALUE}"
          if [ "" = "$VALUE" ]; then
            echo "service_id not set"
            exit 1
          fi

          echo "service_id=$VALUE" >> "$GITHUB_ENV"

      - name: Set image_id
        env:
          REPOSITORY_DISPATCH_VALUE: ${{ github.event.client_payload.image_id }}
          WORKFLOW_DISPATCH_VALUE: ${{ github.event.inputs.image_id }}
        run: |
          VALUE="${REPOSITORY_DISPATCH_VALUE:-$WORKFLOW_DISPATCH_VALUE}"
          if [ "" = "$VALUE" ]; then
            echo "image_id not set"
            exit 1
          fi

          echo "image_id=$VALUE" >> "$GITHUB_ENV"

      - name: Output setup
        run: |
          echo "service_id: ${{ env.service_id }}"
          echo "image_id: ${{ env.image_id }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Store
        env:
          CONFIGURATION_PATH: ./services/${{ env.service_id }}/image.json
          IMAGE_ID: ${{ env.image_id }}
        run: |
          mkdir -p "$(dirname "$CONFIGURATION_PATH")"
          jq "." <<< "{\"image_id\":\"$IMAGE_ID\"}" > "$CONFIGURATION_PATH"

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic image update for ${{ env.service_id }}"
