name: instance.create

on:
  workflow_dispatch:
    inputs:
      service_id:
        description: Service for which to create an instance
        required: true

jobs:
  create:
    name: Create instance for ${{ github.event.inputs.service_id }}
    runs-on: ubuntu-latest
    env:
      DIGITALOCEAN_API_TOKEN: ${{ secrets.DIGITALOCEAN_API_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Check service image exists
        run: |
          php bin/console app:image:exists \
          --service-id='${{ github.event.inputs.service_id }}'

      - name: Create
        run: |
          CREATE_OUTPUT=$(
            php bin/console app:instance:create \
              --first-boot-script='[[ -f /root/first-boot.sh ]] && cd /root && chmod +x ./first-boot.sh && ./first-boot.sh' \
              --service-id='${{ github.event.inputs.service_id }}' \
              --secrets-json='${{ toJson(secrets) }}'
          )
          echo "instance_id=$(echo "$CREATE_OUTPUT" | jq -r ".id")" >> "$GITHUB_ENV"

      - name: Is active?
        run: |
          php bin/console app:instance:is-active \
          --id=${{ env.instance_id }}

      - name: Health check
        run: |
          php bin/console app:instance:is-healthy \
          --service-id='${{ github.event.inputs.service_id }}' \
          --id=${{ env.instance_id }}

      - name: Readiness check
        run: |
          php bin/console app:instance:is-ready \
          --service-id='${{ github.event.inputs.service_id }}' \
          --id=${{ env.instance_id }}

      - name: Remove instance on failure
        if: ${{ failure() }}
        run: php bin/console app:instance:destroy --id="${{ env.instance_id }}"
